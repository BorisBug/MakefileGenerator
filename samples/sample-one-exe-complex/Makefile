#-------------------------------------------------->
# makefile autogenerated by python script
# customize it following your own needs <3
#-------------------------------------------------->

# executable(s)
EXEC := main

# folders
BUILD := build
SOURCE := .

# compiler / linker
CC := gcc

# sources
SRCS := $(shell find $(SOURCE) -name '*.c')

# objects
OBJS := $(addprefix $(BUILD)/, $(notdir $(SRCS:%.c=%.o)))

# folders to include on compilation time
INCS := $(addprefix -I,$(shell find $(SOURCE) -type f -name "*.h" | xargs dirname | sort | uniq))

# flags for compilation & linking
CFLAGS := -Wall -Werror -Wpedantic -Wextra -MMD -MP
LDFLAGS :=

# targets ------------------>

# build all
build: $(BUILD)/$(EXEC)

# run all
run: build
	@echo '**************************************************'
	@echo 'Running all executables...'
	@echo '**************************************************'
	@echo ''
	@./$(BUILD)/$(EXEC)

# target: main
$(BUILD)/$(EXEC): $(OBJS)
	@$(CC) $^ $(LDFLAGS) -o $@

# target for files inside of '.' (level 0)
$(BUILD)/%.o: ./%.c
	@mkdir -p $(dir $@)
	@$(CC) -c $< -o $@ $(CFLAGS) $(INCS)

# target for files inside of './*' (level 1)
$(BUILD)/%.o: ./*/%.c
	@mkdir -p $(dir $@)
	@$(CC) -c $< -o $@ $(CFLAGS) $(INCS)

# target for files inside of './*/*' (level 2)
$(BUILD)/%.o: ./*/*/%.c
	@mkdir -p $(dir $@)
	@$(CC) -c $< -o $@ $(CFLAGS) $(INCS)

main: $(BUILD)/$(EXEC)
	@echo ''
	@echo '**************************************************'
	@echo 'Running main...'
	@echo '**************************************************'
	@echo ''
	@./$(BUILD)/$(EXEC)

help:
	@clear
	@echo '******************** Targets *********************'
	@echo 'help: to print this menu'
	@echo 'build: to compile and link all sources (default)'
	@echo 'run: to run all the executables'
	@echo 'main: to run main'
	@echo 'clean: to remove the build folder'
	@echo '**************************************************'
	@echo ''

clean:
	@rm -rf $(BUILD)

.PHONY: help build run main clean

-include $(OBJS:.o=.d)
